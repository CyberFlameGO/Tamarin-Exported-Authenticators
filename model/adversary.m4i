rule Reveal_ltk:
  [ !Ltk(A, ltk) ]
--[ RevLtk(A) ]->
  [ Out(ltk) ]

rule I_0:
  let
    I=$I
    S=$S
  in
    [ Fr(~iid)
    ]
  --[ Adv_PreStart(~iid, I, S, 'client')
    , I0(~iid)
    , Neq(I, S)
    ]->
    [ State(~iid, 'I0', I, S, 'client', 'none')
    , Create_TLS_Channel(I, ~iid, S)
    , Out(<~iid>)
    ]


rule Create_Adv_TLS_channel1:
  let 
    C=$C
    I=$I
  in
    [ Create_TLS_Channel(C, cid, I) 
    , Fr(~iid)
    , !Ltk($I, ltkI)
    ]
  --[ Adv_TLS($I, ~iid) 
    ]->
    [ Create_TLS_Channel2(C, cid, I, ~iid, pk(ltkI))
    , State(~iid, 'I0', I, C, 'server', 'none')
    , Out(<cid, ~iid, ltkI>)
    ]


rule Adv_1_Uni:
  let
    I=$I
    S=$S
  in
    [ Create_TLS_Channel2(I, ~iid, S, sid, pk(ltkS))
    , State(~iid, 'I0', I, S, 'client', 'none')
    , !Pk(S, pk(ltkS))
    ]
  --[ I1(~iid)
    , StartI(~iid, I, S, 'client')
    ]->
    [ State(~iid, 'I1', I, S, 'client', 'auth')
    , Create_TLS_Channel3(I, ~iid, 'none', S, sid, pk(ltkS))
    , Out(<sid>)
    ]

rule Adv_1_Bi:
  let
    I=$I
    S=$S
  in
    [ Create_TLS_Channel2(I, ~iid, S, sid, pk(ltkS))
    , State(~iid, 'I0', I, S, 'client', 'none')
    , !Pk(S, pk(ltkS))
    , !Ltk(I, ltkI)
    ]
  --[ I1(~iid)
    , StartI(~iid, I, S, 'client')
    ]->
    [ State(~iid, 'I1', I, S, 'client', 'auth')
    , Create_TLS_Channel3(I, ~iid, pk(ltkI), S, sid, pk(ltkI))
    , Out(<sid, ltkI>)
    ]


rule Adv_2_uni:
  let
    C=$C
    I=$I
  in
    [ Create_TLS_Channel3(C, cid, 'none', I,  ~iid, pk(ltkI))
    , State(~iid, 'I0', I, C, 'server', 'none')
    ]
  --[ StartI(~iid, I, C, 'server')
    , I1(~iid)
    ]->
    [ State(~iid, 'I1', I, C, 'server', 'none')
    , Create_TLS_Channel4(C, cid, 'none', I, ~iid, pk(ltkI), 'uni')
    ]

rule Adv_2_bi:
  let
    C=$C
    I=$I
  in
    [ Create_TLS_Channel3(C, cid, pk(ltkC),  I, ~iid, pk(ltkI))
    , State(~iid, 'I0', I, C, 'server', 'none')
    , !Pk(C, pk(ltkC))
    ]
  --[ StartI(~iid, I, C, 'server')
    , I1(~iid)
    ]->
    [ State(~iid, 'I1', I, C, 'server', 'auth')
    , Create_TLS_Channel4(C, cid, pk(ltkC), I, ~iid, pk(ltkI), 'bi')
    ]

rule Adv_Send_TLS_owner:
  [ In(<iid, m>)
  , !TLS_Channel(ms, TLS_transcript, auth_status, $I, iid, $S, sid)
  ]
  --[ A_Send(iid) ]->
  [ TLS_Send(iid, $I, $S, m) ]

rule Adv_Send_TLS_target:
  [ In(<iid, m>)
  , !TLS_Channel(ms, TLS_transcript, auth_status, $C, cid, $I, iid)
  ]
  --[ A_Send(iid) ]->
  [ TLS_Send(iid, $I, $C, m) ]

rule Adv_Recv_TLS:
  [ TLS_Recv(iid, from_host, to_host, msg)
  , In(<iid>)
  ]
  --[ A_Recv(iid) ]->
  [ Out(<from_host, to_host, msg>) ] 

